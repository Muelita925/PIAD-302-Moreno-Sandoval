package javaapplication10;

import java.sql.*;
import java.util.*;
import javax.swing.table.DefaultTableColumnModel;
import javax.swing.table.DefaultTableModel;
public class Formulario extends javax.swing.JFrame {

    /**
     * Creates new form Formulario
     */
    public Formulario() {
        initComponents();
        conectar();
        Cargar_Registros_en_la_tabla();
        agregarListenerATabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        Tabla_datos = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtRegionID = new javax.swing.JTextField();
        txtRegionDescription = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnInsertar = new javax.swing.JButton();
        btnObtener = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Tabla_datos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(Tabla_datos);

        jLabel1.setText("Formulario - Region");

        jLabel2.setText("RegionID:");

        jLabel3.setText("Region Description:");

        txtRegionID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegionIDActionPerformed(evt);
            }
        });

        txtRegionDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegionDescriptionActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnInsertar.setText("Insertar");
        btnInsertar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertarActionPerformed(evt);
            }
        });

        btnObtener.setText("Obtener");
        btnObtener.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObtenerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(73, 73, 73)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(56, 56, 56)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtRegionDescription, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtRegionID, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(80, 80, 80)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnActualizar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(btnEliminar)
                            .addComponent(btnInsertar)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 723, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(68, 68, 68)
                        .addComponent(btnObtener)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnInsertar))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtRegionID, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnActualizar))
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtRegionDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnEliminar))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel3)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(146, 146, 146)
                        .addComponent(btnObtener)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>                        

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
        Actualizar_registro();
       
        
    }                                             

    private void btnInsertarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        Insertar_registro();
        
    }                                           

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
        Eliminar_registro();
        
    }                                           

    private void txtRegionIDActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void txtRegionDescriptionActionPerformed(java.awt.event.ActionEvent evt) {                                                     
        // TODO add your handling code here:
    }                                                    

    private void btnObtenerActionPerformed(java.awt.event.ActionEvent evt) {                                           
        // TODO add your handling code here:
    }                                          

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Formulario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Formulario().setVisible(true);
            }
        });
    }
    
    public Connection conectar() {
        Connection cn = null;
        try {
            String jdbc_url = "jdbc:sqlserver://localhost:1433;encrypt=false;databaseName=Northwind";
            cn = DriverManager.getConnection(jdbc_url,"sa","1234");
            
            if (cn != null) {
                System.out.println("Conexion Exitosa");
            }
            } catch (SQLException ex) {                
            }
        return cn;
    }
    
    public ResultSet listar() {
        String consulta_base_de_datos = "SELECT * FROM Region";
        ResultSet resultados = null;
        //Una Sentencia
        try {
            Statement sentencia = conectar().createStatement();
            
            resultados = sentencia.executeQuery(consulta_base_de_datos);
            
        } catch (SQLException e) {
            System.out.println(e);
        }
        return resultados;
    }
    
    public void Cargar_Registros_en_la_tabla(){
        ResultSet resultados = listar();
        String[] columnNames = {"RegionID", "RegionDescription"};
        DefaultTableModel model = new DefaultTableModel(null, columnNames);
        
        try {
        while (resultados.next()) {
            String[] registro = new String[2];
            registro[0] = resultados.getString("RegionID");
            registro[1] = resultados.getString("RegionDescription");
            model.addRow(registro);
        }
    } catch (SQLException e) {
        System.out.println(e);
    }

    Tabla_datos.setModel(model);
}
    
    public void Insertar_registro () {
        
    String consulta_base_de_datos = "INSERT INTO Region (RegionID, RegionDescription) VALUES(?,?)";
    int regionID =Integer.parseInt(txtRegionID.getText());
    String regionDescription = txtRegionDescription.getText();
    try {
        PreparedStatement sentencia_preparada = conectar().prepareStatement(consulta_base_de_datos);
        sentencia_preparada.setInt(1, regionID);
        sentencia_preparada.setString(2, regionDescription);
        sentencia_preparada.executeUpdate();
        System.out.println("Registro insertado");
        Cargar_Registros_en_la_tabla();
    } catch (SQLException e) {
        System.out.println("Error al insertar: " + e.getMessage());
    }
}
    public void Actualizar_registro () {
        
    String consulta_base_de_datos = "UPDATE Region SET RegionDescription = ? WHERE RegionID = ?";
    int regionID = Integer.parseInt(txtRegionID.getText());
    String regionDescription = txtRegionDescription.getText();

    try {
        PreparedStatement sentencia_preparada = conectar().prepareStatement(consulta_base_de_datos);
        sentencia_preparada.setString(1, regionDescription);
        sentencia_preparada.setInt(2, regionID);
        sentencia_preparada.executeUpdate();
        System.out.println("Registro actualizado");
        Cargar_Registros_en_la_tabla();
    } catch (SQLException e) {
        System.out.println("Error al actualizar: " + e.getMessage());
    }
}
    public void Eliminar_registro () {
        
    String consulta_base_de_datos = "DELETE FROM Region WHERE RegionID = ?";
    int regionID = Integer.parseInt(txtRegionID.getText());

    try {
        PreparedStatement sentencia_preparada = conectar().prepareStatement(consulta_base_de_datos);
        sentencia_preparada.setInt(1, regionID);
        sentencia_preparada.executeUpdate();
        System.out.println("Registro eliminado");
        Cargar_Registros_en_la_tabla();
        txtRegionID.setText("");
        txtRegionDescription.setText("");
    } catch (SQLException e) {
        System.out.println("Error al eliminar: " + e.getMessage());
    }
}
    
 public void agregarListenerATabla() {
    Tabla_datos.getSelectionModel().addListSelectionListener(event -> {

        if (!event.getValueIsAdjusting()) {
            int filaSeleccionada = Tabla_datos.getSelectedRow();
            if (filaSeleccionada != -1) {
                String RegionID = Tabla_datos.getValueAt(filaSeleccionada, 0).toString();
                String RegionDescription = Tabla_datos.getValueAt(filaSeleccionada, 1).toString();

 
                txtRegionID.setText(RegionID);
                txtRegionDescription.setText(RegionDescription);
            }
        }
    });
}   
    // Variables declaration - do not modify                     
    private javax.swing.JTable Tabla_datos;
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnInsertar;
    private javax.swing.JButton btnObtener;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtRegionDescription;
    private javax.swing.JTextField txtRegionID;
    // End of variables declaration                   
}
